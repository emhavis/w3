# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
# #    - run: npm ci
#     - run: npm install --force
#     - run: npm run build --if-present
# #    - run: npm test

#   build-container:
#     name: Build Container
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Build and push to Docker Hub
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: true
#           tags: emhavis/web3:latest, emhavis/web3:${{ github.run_number }}

  deploy:
    name: deploy on PKC-DEV
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        shell: 'script -q -e -c "bash {0}"'
        run: |
          cd cs-test
          docker-compose -T  down >> ci_cd_log.txt
          docker rmi -f emhavis/web3:latest >> ci_cd_log.txt
          docker-compose -T up -d >> ci_cd_log.txt
          ./update-sw.sh >> ci_cd_log.txt


